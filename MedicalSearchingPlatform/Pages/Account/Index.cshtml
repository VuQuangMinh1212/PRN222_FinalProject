@page
@model MedicalSearchingPlatform.Pages.Account.IndexModel
@{
    ViewData["Title"] = "Manage Accounts";
}
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    var userName = HttpContextAccessor.HttpContext?.Session.GetString("UserName") ?? "Guest";
    var userRole = HttpContextAccessor.HttpContext?.Session.GetString("UserRole") ?? "No Role";
}



<div class="account container mt-5">
    @if (userRole == "Admin")
    {
        <p>You have permission to edit doctor details.</p>
    }
    else
    {
        <p class="text-danger">You do not have permission to edit this page.</p>
    }
    <h2 class="text-center">User Accounts</h2>

    <div class="d-flex justify-content-between mb-3">
        <a asp-page="Create" class="btn-create-new-account">Create New Account</a>

        <form method="get" class="d-flex">
            <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control me-2" placeholder="Search by email or name">
            <button type="submit" class="btn-search-account">Search</button>
        </form>
    </div>

    <table class="table table-striped table-bordered shadow">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Is Active</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FullName</td>
                    <td>@user.Email</td>
                    <td>@(user.Role ?? "Not Assigned")</td>
                    <td>
                        <span class="badge @(user.IsActive ? "bg-success" : "bg-danger")">
                            @(user.IsActive ? "Active" : "Inactive")
                        </span>
                    </td>
                    <td>
                        <a asp-page="Detail" asp-route-id="@user.Id" class="btn btn-info btn-sm">Detail</a>
                        <button type="button" class="btn @(user.IsActive ? "btn-danger" : "btn-success") btn-sm"
                                data-bs-toggle="modal" data-bs-target="#confirmDeactivateModal"
                                data-userid="@user.Id" data-username="@user.FullName">
                            @(user.IsActive ? "Deactivate" : "Activate")
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Deactivate Confirmation Modal -->
<div class="modal fade" id="confirmDeactivateModal" tabindex="-1" aria-labelledby="confirmDeactivateLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content p-4">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeactivateLabel">Confirm Action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to <span id="actionText">deactivate</span> the user <strong id="usernamePlaceholder"></strong>?</p>
            </div>
            <div class="modal-footer">
                <form method="post" asp-page-handler="ToggleStatus">
                    <input type="hidden" id="userIdInput" name="id" />
                    <button type="submit" class="btn btn-danger">Confirm</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var confirmModal = document.getElementById("confirmDeactivateModal");

        confirmModal.addEventListener("show.bs.modal", function (event) {
            var button = event.relatedTarget;
            var userId = button.getAttribute("data-userid");
            var username = button.getAttribute("data-username");
            var actionText = button.innerText.trim();

            document.getElementById("userIdInput").value = userId;
            document.getElementById("usernamePlaceholder").textContent = username;
            document.getElementById("actionText").textContent = actionText.toLowerCase();
        });
    });
</script>
